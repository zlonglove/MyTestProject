apply plugin: 'com.android.library'

android {
	compileSdkVersion rootProject.ext.android.compileSdkVersion
	buildToolsVersion rootProject.ext.android.buildToolsVersion

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	defaultConfig {
		minSdkVersion rootProject.ext.android.minSdkVersion
		targetSdkVersion rootProject.ext.android.targetSdkVersion
		versionCode rootProject.ext.android.versionCode
		versionName rootProject.ext.android.versionName
		externalNativeBuild {
			cmake {
				arguments "-DANDROID_PLATFORM=android-$rootProject.ext.android.minSdkVersion"
				cFlags '-std=c11', '-Weverything', '-Wall'
				if (isDebugBuild()) {
					cFlags '-DDEBUG', '-g'
				} else {
					cFlags '-DNDEBUG', '-Os', '-g0', '-fvisibility=hidden'
				}
				abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "mips", "mips64", "x86", "x86_64"
			}
		}
	}

	externalNativeBuild {
		cmake {
			path 'src/main/c/CMakeLists.txt'
		}
	}

	signingConfigs {
		release {
		}
	}
	buildTypes {
		release {
			signingConfig signingConfigs.release
			if (isDebugBuild()) {
				debuggable true
				jniDebuggable true
			}
		}
	}
	testOptions {
		unitTests.returnDefaultValues = true
	}
}

dependencies {
	compileOnly rootProject.ext.dependencies.annotations
	testCompileOnly rootProject.ext.dependencies.annotations
}

def isDebugBuild() {
	!gradle.startParameter.taskNames.contains("uploadArchives") && VERSION_NAME.contains("SNAPSHOT")
}
